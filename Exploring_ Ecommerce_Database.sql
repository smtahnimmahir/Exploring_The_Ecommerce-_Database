USE MAVENFUZZYFACTORY;
-- 01. View first 10 orders table item
SELECT * FROM mavenfuzzyfactory.orders
LIMIT 10;

-- 02. website session id 20, which type of page visited
SELECT * FROM website_pageviews
WHERE website_session_id = 20
ORDER BY CREATED_AT;

-- 03. Total website sessions
SELECT COUNT(website_session_id) FROM website_sessions; -- 472,871

-- 04. Total website page view
select count(website_pageview_id) from website_pageviews; -- 1188124

-- Total orders
select count(order_id) from orders;  -- 32313

-- 05. Find the Average Number of pageview per Session
Select 
	count(distinct website_session_id) as Total_Session,
    count(website_pageview_id) as Total_pageview,
    count(website_pageview_id) / count(distinct website_session_id) as 'Average Number of Pageview Per Session'
from website_pageviews;

-- 06. Find the Conversion Rate (CVR): TOTAL ORDERS/TOTAL SESSIONS

Select * from website_sessions;
Select * from orders;

select
	COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS TOTAL_SESSIONS, -- 472871
    COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS, -- 32313
	count(distinct o.order_id)/count(distinct w.website_session_id) as CVR
	from website_sessions w
left join orders o
	on w.website_session_id = o.website_session_id;

-- 07. Find the Conversion Rate (CVR) before 2012-06-30

SELECT 
	MIN(created_at), -- 2012-03-19
	MAX(CREATED_AT) -- 2015-03-19
FROM website_sessions;

 SELECT
	COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS TOTAL_SESSIONS, -- 13239
	COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS, -- 404
    COUNT(DISTINCT O.ORDER_ID)/COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS CVR -- 0.0305
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
    ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT <'2012-06-30';

-- 08. Month & Year wise CVR between 2012 to 2015
 SELECT
	YEAR(W.CREATED_AT) AS YEAR,
    MONTH(W.CREATED_AT) AS MONTH,
	COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS TOTAL_SESSIONS, -- 472871
    COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS, -- 32313
    COUNT(DISTINCT O.ORDER_ID)/COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS CVR -- 0.0305
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
    ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT BETWEEN '2012-06-30' AND '2015-05-30'
GROUP BY 1,2
ORDER BY 1,2;

-- 09. Find the CVR in weekly wise
SELECT
	-- YEAR(W.CREATED_AT) AS YEAR,
    -- MONTH(W.CREATED_AT) AS MONTH,
    WEEK(W.CREATED_AT) AS WEEK,
    MIN(DATE(W.CREATED_AT)) AS WEEK_START_DATE,    
	-- COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS TOTAL_SESSIONS, -- 472871
   --  COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS, -- 32313
    COUNT(DISTINCT O.ORDER_ID)/COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS CVR -- 0.0305
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
    ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT BETWEEN '2012-06-30' AND '2015-05-30'
GROUP BY YEAR(W.CREATED_AT),WEEK(W.CREATED_AT)
ORDER BY 1,2;

-- 10. Find The CVR Based on Device Type
SELECT
    W.DEVICE_TYPE,
	-- COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS TOTAL_SESSIONS, -- 472871
   --  COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS, -- 32313
    COUNT(DISTINCT O.ORDER_ID)/COUNT(DISTINCT W.WEBSITE_SESSION_ID) AS CVR -- 0.0305
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
    ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT BETWEEN '2012-06-30' AND '2015-05-30'
GROUP BY 1
ORDER BY 1;

-- 11. Find the Desktop & Mobile CVR in everry Weakly wise

SELECT
	-- YEAR(W.CREATED_AT) AS YEAR,
    -- MONTH(W.CREATED_AT) AS MONTH,
    MIN(DATE(W.CREATED_AT)) AS WEEK_START_DATE,    
    COUNT(DISTINCT CASE WHEN W.DEVICE_TYPE = 'desktop' THEN O.ORDER_ID ELSE NULL END)/COUNT(DISTINCT CASE WHEN W.DEVICE_TYPE = 'desktop' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS Desktop_CVR,
    COUNT(DISTINCT CASE WHEN W.DEVICE_TYPE = 'mobile' THEN O.ORDER_ID ELSE NULL END)/COUNT(DISTINCT CASE WHEN W.DEVICE_TYPE = 'mobile' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS Mobile_CVR
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
    ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT BETWEEN '2012-06-30' AND '2013-03-31'
GROUP BY YEAR(W.CREATED_AT),WEEK(W.CREATED_AT)
ORDER BY 1,2;

select * from website_sessions;

SELECT DISTINCT
	UTM_SOURCE,
	UTM_CAMPAIGN,
	HTTP_REFERER
FROM WEBSITE_SESSIONS
	WHERE WEBSITE_SESSIONS.CREATED_AT < '2013-06-30';


-- 12. Site Traffic Breakdown by UTM_SOURCE, UTM_CAMPAIGN, HTTTP_REFERER & Total Sessions
SELECT DISTINCT
	UTM_SOURCE,
	UTM_CAMPAIGN,
	HTTP_REFERER,
    COUNT(DISTINCT WEBSITE_SESSION_ID) AS TOTAL_SESSIONS
FROM WEBSITE_SESSIONS
	WHERE WEBSITE_SESSIONS.CREATED_AT < '2015-06-30'
GROUP BY 1,2,3;
-- 13. Find The total GSearch, BSeasrch, Organic Search and others  search based on every year and monthly wise & Also find the CVR based on search type 
SELECT
	YEAR(W.CREATED_AT) AS YEAR,
    MONTH(W.CREATED_AT) AS MONTH,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'gsearch' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS GSEARCH_PAID_SESSIONS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'bsearch' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS BSEARCH_PAID_SESSIONS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NOT NULL THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS ORGANIC_SEARCH_SESSIONS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NULL THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS DIRECT_TYPE_IN_SESSIONS,
	COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'gsearch' THEN O.ORDER_ID ELSE NULL END) AS GSEARCH_PAID_ORDERS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'bsearch' THEN O.ORDER_ID ELSE NULL END) AS BSEARCH_PAID_ORDERS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NOT NULL THEN O.ORDER_ID ELSE NULL END) AS ORGANIC_SEARCH_ORDERS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NULL THEN O.ORDER_ID ELSE NULL END) AS DIRECT_TYPE_IN_ORDERS,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'gsearch' THEN O.ORDER_ID ELSE NULL END) / COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'gsearch' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS GSEARCH_PAID_CVR,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'bsearch' THEN O.ORDER_ID ELSE NULL END) / COUNT(DISTINCT CASE WHEN W.UTM_SOURCE = 'bsearch' THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS BSEARCH_PAID_CVR,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NOT NULL THEN O.ORDER_ID ELSE NULL END) / COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND HTTP_REFERER IS NOT NULL THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS ORGANIC_SEARCH_CVR,
    COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND W.HTTP_REFERER IS NULL THEN O.ORDER_ID ELSE NULL END) / COUNT(DISTINCT CASE WHEN W.UTM_SOURCE IS NULL AND HTTP_REFERER IS NULL THEN W.WEBSITE_SESSION_ID ELSE NULL END) AS DIRECT_TYPE_IN_CVR
FROM WEBSITE_SESSIONS W
LEFT JOIN ORDERS O
	ON O.WEBSITE_SESSION_ID = W.WEBSITE_SESSION_ID
WHERE W.CREATED_AT < '2013-01-30'
GROUP BY 1,2
ORDER BY 1,2;

-- 14. 'gsearch' and 'nonbrand' mobile vs desktop performance (session/conversion) comparison.

SELECT * FROM WEBSITE_SESSIONS LIMIT 10;

SELECT
	YEAR(website_sessions.created_at) AS Year, 
    MONTH(website_sessions.created_at) AS Month, 
    COUNT(DISTINCT CASE WHEN device_type = 'desktop' THEN website_sessions.website_session_id ELSE NULL END) AS Desktop_Sessions, 
    COUNT(DISTINCT CASE WHEN device_type = 'desktop' THEN orders.order_id ELSE NULL END) AS Desktop_Orders,
    COUNT(DISTINCT CASE WHEN device_type = 'mobile' THEN website_sessions.website_session_id ELSE NULL END) AS Mobile_Sessions, 
    COUNT(DISTINCT CASE WHEN device_type = 'mobile' THEN orders.order_id ELSE NULL END) AS Mobile_Orders
FROM website_sessions
	LEFT JOIN orders 
		ON orders.website_session_id = website_sessions.website_session_id
WHERE 
	website_sessions.created_at < '2012-11-30'
	AND website_sessions.utm_source = 'gsearch'
    AND website_sessions.utm_campaign = 'nonbrand'
GROUP BY 1,2;

-- 15. Could you get the most-viewed website pages, ranked by session volume?

SELECT * FROM WEBSITE_PAGEVIEWS LIMIT 10;

SELECT
	PAGEVIEW_URL,
    COUNT(DISTINCT WEBSITE_SESSION_ID) AS TOTAL_PAGEVIEW
FROM WEBSITE_PAGEVIEWS
GROUP BY PAGEVIEW_URL
ORDER BY TOTAL_PAGEVIEW DESC;


-- 16. Identify the top entry pages and rank them on entry volume using COMMON TABLE EXPRESSION (CTE)

WITH FIRST_PAGEVIEW AS
(SELECT
	WEBSITE_SESSION_ID,
    MIN(WEBSITE_PAGEVIEW_ID) AS STARTING_PAGEVIEW_ID
FROM WEBSITE_PAGEVIEWS
GROUP BY WEBSITE_SESSION_ID)

SELECT
	WEBSITE_PAGEVIEWS.PAGEVIEW_URL AS LANDING_PAGE,
    COUNT(FIRST_PAGEVIEW.WEBSITE_SESSION_ID) AS NUMBER_OF_SESSIONS
FROM FIRST_PAGEVIEW
LEFT JOIN WEBSITE_PAGEVIEWS
	ON WEBSITE_PAGEVIEWS.WEBSITE_PAGEVIEW_ID = FIRST_PAGEVIEW.STARTING_PAGEVIEW_ID
GROUP BY LANDING_PAGE
ORDER BY NUMBER_OF_SESSIONS DESC;



